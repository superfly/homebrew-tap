# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Flyctl < Formula
  desc ""
  homepage "https://fly.io"
  version "0.2.56"

  on_macos do
    on_intel do
      url "https://github.com/superfly/flyctl/releases/download/v0.2.56/flyctl_0.2.56_macOS_x86_64.tar.gz"
      sha256 "2e674f8a380cfd20a2c6f5862ec99365d8e7cb9e2768dceb897f0e48e34711ea"

      def install
        bin.install "flyctl"
        bin.install_symlink "flyctl" => "fly"

        bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
        (bash_completion/"flyctl").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
        (zsh_completion/"_flyctl").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
        (fish_completion/"flyctl.fish").write fish_output
      end
    end
    on_arm do
      url "https://github.com/superfly/flyctl/releases/download/v0.2.56/flyctl_0.2.56_macOS_arm64.tar.gz"
      sha256 "da2fac9ffa9a12742e6ac1a25d725d462b9cc07ba91b58ebad575ff87d758ae4"

      def install
        bin.install "flyctl"
        bin.install_symlink "flyctl" => "fly"

        bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
        (bash_completion/"flyctl").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
        (zsh_completion/"_flyctl").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
        (fish_completion/"flyctl.fish").write fish_output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/superfly/flyctl/releases/download/v0.2.56/flyctl_0.2.56_Linux_x86_64.tar.gz"
        sha256 "80128ed2b549568f1e74f7d1dda408baa1942547bddedec4c57781d4d7f61ded"

        def install
          bin.install "flyctl"
          bin.install_symlink "flyctl" => "fly"

          bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
          (bash_completion/"flyctl").write bash_output
          zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
          (zsh_completion/"_flyctl").write zsh_output
          fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
          (fish_completion/"flyctl.fish").write fish_output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/superfly/flyctl/releases/download/v0.2.56/flyctl_0.2.56_Linux_arm64.tar.gz"
        sha256 "652fb0e18c3b257fba8a950fea56fc5074c3d0edb54edf47c1037b0e58bda7dc"

        def install
          bin.install "flyctl"
          bin.install_symlink "flyctl" => "fly"

          bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
          (bash_completion/"flyctl").write bash_output
          zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
          (zsh_completion/"_flyctl").write zsh_output
          fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
          (fish_completion/"flyctl.fish").write fish_output
        end
      end
    end
  end

  test do
    system "#{bin}/flyctl version"
  end
end
