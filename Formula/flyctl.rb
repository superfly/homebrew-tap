# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Flyctl < Formula
  desc ""
  homepage "https://fly.io"
  version "0.2.72"

  on_macos do
    on_intel do
      url "https://github.com/superfly/flyctl/releases/download/v0.2.72/flyctl_0.2.72_macOS_x86_64.tar.gz"
      sha256 "8c8340f88eaf0e5c68bac87e31ed01e42114fcae81c2300525f7a65c363bc72c"

      def install
        bin.install "flyctl"
        bin.install_symlink "flyctl" => "fly"

        bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
        (bash_completion/"flyctl").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
        (zsh_completion/"_flyctl").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
        (fish_completion/"flyctl.fish").write fish_output
      end
    end
    on_arm do
      url "https://github.com/superfly/flyctl/releases/download/v0.2.72/flyctl_0.2.72_macOS_arm64.tar.gz"
      sha256 "6dd76f1752c4dd7c74991a66b71ada5a19f74a40c3921f186908f03f7df6783e"

      def install
        bin.install "flyctl"
        bin.install_symlink "flyctl" => "fly"

        bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
        (bash_completion/"flyctl").write bash_output
        zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
        (zsh_completion/"_flyctl").write zsh_output
        fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
        (fish_completion/"flyctl.fish").write fish_output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/superfly/flyctl/releases/download/v0.2.72/flyctl_0.2.72_Linux_x86_64.tar.gz"
        sha256 "8b8076c3eb5fa1ff8c7e5028c1b8a21f739aeaa492e912c6e9ac5ea1f89301e8"

        def install
          bin.install "flyctl"
          bin.install_symlink "flyctl" => "fly"

          bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
          (bash_completion/"flyctl").write bash_output
          zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
          (zsh_completion/"_flyctl").write zsh_output
          fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
          (fish_completion/"flyctl.fish").write fish_output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/superfly/flyctl/releases/download/v0.2.72/flyctl_0.2.72_Linux_arm64.tar.gz"
        sha256 "42f33bbba76f4601a250b0d6875acc6bd23bfe8efb00b22ebf1bd5f712202149"

        def install
          bin.install "flyctl"
          bin.install_symlink "flyctl" => "fly"

          bash_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "bash")
          (bash_completion/"flyctl").write bash_output
          zsh_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "zsh")
          (zsh_completion/"_flyctl").write zsh_output
          fish_output = Utils.safe_popen_read("#{bin}/flyctl", "completion", "fish")
          (fish_completion/"flyctl.fish").write fish_output
        end
      end
    end
  end

  test do
    system "#{bin}/flyctl version"
  end
end
